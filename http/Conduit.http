# Conduit

### Hello World!
GET {{API_URL}}
Content-Type: application/json


### Get All Users
GET {{API_URL}}/users
Content-Type: application/json

###
# group: Auth
# @name Register
POST {{API_URL}}/users
Content-Type: application/json
X-Requested-With: XMLHttpRequest

{"user":{"email":"{{EMAIL}}", "password":"{{PASSWORD}}", "username":"{{USERNAME}}"}}

> {% client.global.set("token", response.body.user.token); %}

###
# group: Auth
# @name Login
POST {{API_URL}}/users/login
Content-Type: application/json
X-Requested-With: XMLHttpRequest

{"user":{"email":"{{EMAIL}}", "password":"{{PASSWORD}}"}}

> {% client.global.set("token", response.body.user.token); %}

###
# group: Auth
# @name Login and Remember Token
POST {{API_URL}}/users/login
Content-Type: application/json
X-Requested-With: XMLHttpRequest

{"user":{"email":"{{EMAIL}}", "password":"{{PASSWORD}}"}}

> {% client.global.set("token", response.body.user.token); %}

###
# group: Auth
# @name Current User
GET {{API_URL}}/user
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {% client.global.set("token", response.body.user.token); %}

###
# group: Auth
# @name Update User
PUT {{API_URL}}/user
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{"user":{"bio":"{{BIO}}"}}

> {% client.global.set("token", response.body.user.token); %}

###
# group: Articles
# @name All Articles
GET {{API_URL}}/articles
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles
# @name Articles by Author
GET {{API_URL}}/articles?
    author=johnjacob
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles
# @name Articles Favorited by Username
GET {{API_URL}}/articles?
    favorited={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //     
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles
# @name Articles by Tag
GET {{API_URL}}/articles?
    tag=dragons
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Create Article
POST {{API_URL}}/articles
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{
  "article": {
    "title": "How to train your dragon",
    "description": "Ever wonder how?",
    "body": "Very carefully.",
    "tagList": [
      "training",
      "dragons"
    ]
  }
}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var responseJSON = JSON.parse(responseBody);
    //
    // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
    //
    // var article = responseJSON.article || {};
    //
    // tests['Article has "title" property'] = article.hasOwnProperty('title');
    // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    // pm.globals.set('slug', article.slug);
    //
    // tests['Article has "body" property'] = article.hasOwnProperty('body');
    // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    // tests['Article has "description" property'] = article.hasOwnProperty('description');
    // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    // tests['Article has "author" property'] = article.hasOwnProperty('author');
    // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //
%}

###
# group: Articles, Favorite, Comments
# @name Feed
GET {{API_URL}}/articles/feed
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name All Articles
GET {{API_URL}}/articles
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name All Articles with auth
GET {{API_URL}}/articles
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Articles by Author
GET {{API_URL}}/articles?
    author={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Articles by Author with auth
GET {{API_URL}}/articles?
    author={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //
    //     if(responseJSON.articles.length){
    //         var article = responseJSON.articles[0];
    //
    //         tests['Article has "title" property'] = article.hasOwnProperty('title');
    //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //         tests['Article has "description" property'] = article.hasOwnProperty('description');
    //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //         tests['Article has "author" property'] = article.hasOwnProperty('author');
    //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //     } else {
    //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
    //     }
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Single Article by slug
GET {{API_URL}}/articles/{{slug}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var responseJSON = JSON.parse(responseBody);
    //
    // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
    //
    // var article = responseJSON.article || {};
    //
    // tests['Article has "title" property'] = article.hasOwnProperty('title');
    // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    // tests['Article has "body" property'] = article.hasOwnProperty('body');
    // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    // tests['Article has "description" property'] = article.hasOwnProperty('description');
    // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    // tests['Article has "author" property'] = article.hasOwnProperty('author');
    // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    //
%}

###
# group: Articles, Favorite, Comments
# @name Articles by Tag
GET {{API_URL}}/articles?
    tag=dragons
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //     var article = responseJSON.articles[0];
    //     tests['An article was returned'] = article !== undefined;
    //     tests['Article has "title" property'] = article.hasOwnProperty('title');
    //     tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //     tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //     tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //     tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //     tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //     tests['Article has "description" property'] = article.hasOwnProperty('description');
    //     tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //     tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //     tests['The first tag is dragons'] = article.tagList[0] === 'dragons';
    //     tests['The second tag is training'] = article.tagList[1] === 'training';
    //     tests['Article has "author" property'] = article.hasOwnProperty('author');
    //     tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //     tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //     tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Update Article
PUT {{API_URL}}/articles/{{slug}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{
  "article": {
    "body": "With two hands"
  }
}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // if (!(environment.isIntegrationTest)) {
    // var responseJSON = JSON.parse(responseBody);
    //
    // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
    //
    // var article = responseJSON.article || {};
    //
    // tests['Article has "title" property'] = article.hasOwnProperty('title');
    // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    // tests['Article has "body" property'] = article.hasOwnProperty('body');
    // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    // tests['Article has "description" property'] = article.hasOwnProperty('description');
    // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    // tests['Article has "author" property'] = article.hasOwnProperty('author');
    // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Favorite Article
POST {{API_URL}}/articles/{{slug}}/favorite
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var responseJSON = JSON.parse(responseBody);
    //
    // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
    //
    // var article = responseJSON.article || {};
    //
    // tests['Article has "title" property'] = article.hasOwnProperty('title');
    // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    // tests['Article has "body" property'] = article.hasOwnProperty('body');
    // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    // tests['Article has "description" property'] = article.hasOwnProperty('description');
    // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    // tests['Article has "author" property'] = article.hasOwnProperty('author');
    // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    // tests["Article's 'favorited' property is true"] = article.favorited === true;
    // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    // tests["Article's 'favoritesCount' property is greater than 0"] = article.favoritesCount > 0;
    //
%}

###
# group: Articles, Favorite, Comments
# @name Articles Favorited by Username
GET {{API_URL}}/articles?
    favorited={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //     article = responseJSON.articles[0];
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //     tests['Article has "title" property'] = article.hasOwnProperty('title');
    //     tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //     tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //     tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //     tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //     tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //     tests['Article has "description" property'] = article.hasOwnProperty('description');
    //     tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //     tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //     tests['Article has "author" property'] = article.hasOwnProperty('author');
    //     tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //     tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //     tests['favoritesCount is 1'] = article.favoritesCount === 1;
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Articles Favorited by Username with auth
GET {{API_URL}}/articles?
    favorited={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //     article = responseJSON.articles[0];
    //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
    //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
    //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
    //     tests['Article has "title" property'] = article.hasOwnProperty('title');
    //     tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    //     tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    //     tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    //     tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    //     tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    //     tests['Article has "description" property'] = article.hasOwnProperty('description');
    //     tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    //     tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    //     tests['Article has "author" property'] = article.hasOwnProperty('author');
    //     tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    //     tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    //     tests['favoritesCount is 1'] = article.favoritesCount === 1;
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Unfavorite Article
DELETE {{API_URL}}/articles/{{slug}}/favorite
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var responseJSON = JSON.parse(responseBody);
    //
    // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
    //
    // var article = responseJSON.article || {};
    //
    // tests['Article has "title" property'] = article.hasOwnProperty('title');
    // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
    // tests['Article has "body" property'] = article.hasOwnProperty('body');
    // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
    // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
    // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
    // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
    // tests['Article has "description" property'] = article.hasOwnProperty('description');
    // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
    // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
    // tests['Article has "author" property'] = article.hasOwnProperty('author');
    // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
    // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
    // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
    // tests["Article's \"favorited\" property is false"] = article.favorited === false;
    //
%}

###
# group: Articles, Favorite, Comments
# @name Create Comment for Article
POST {{API_URL}}/articles/{{slug}}/comments
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{
  "comment": {
    "body": "Thank you so much!"
  }
}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var responseJSON = JSON.parse(responseBody);
    //
    // tests['Response contains "comment" property'] = responseJSON.hasOwnProperty('comment');
    //
    // var comment = responseJSON.comment || {};
    //
    // tests['Comment has "id" property'] = comment.hasOwnProperty('id');
    // pm.globals.set('commentId', comment.id);
    //
    // tests['Comment has "body" property'] = comment.hasOwnProperty('body');
    // tests['Comment has "createdAt" property'] = comment.hasOwnProperty('createdAt');
    // tests['"createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.createdAt);
    // tests['Comment has "updatedAt" property'] = comment.hasOwnProperty('updatedAt');
    // tests['"updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.updatedAt);
    // tests['Comment has "author" property'] = comment.hasOwnProperty('author');
    //
%}

###
# group: Articles, Favorite, Comments
# @name All Comments for Article
GET {{API_URL}}/articles/{{slug}}/comments
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "comments" property'] = responseJSON.hasOwnProperty('comments');
    //
    //     if(responseJSON.comments.length){
    //         var comment = responseJSON.comments[0];
    //
    //         tests['Comment has "id" property'] = comment.hasOwnProperty('id');
    //         tests['Comment has "body" property'] = comment.hasOwnProperty('body');
    //         tests['Comment has "createdAt" property'] = comment.hasOwnProperty('createdAt');
    //         tests['"createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.createdAt);
    //         tests['Comment has "updatedAt" property'] = comment.hasOwnProperty('updatedAt');
    //         tests['"updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.updatedAt);
    //         tests['Comment has "author" property'] = comment.hasOwnProperty('author');
    //     }
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name All Comments for Article without login
GET {{API_URL}}/articles/{{slug}}/comments
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //
    //     tests['Response contains "comments" property'] = responseJSON.hasOwnProperty('comments');
    //
    //     if(responseJSON.comments.length){
    //         var comment = responseJSON.comments[0];
    //
    //         tests['Comment has "id" property'] = comment.hasOwnProperty('id');
    //         tests['Comment has "body" property'] = comment.hasOwnProperty('body');
    //         tests['Comment has "createdAt" property'] = comment.hasOwnProperty('createdAt');
    //         tests['"createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.createdAt);
    //         tests['Comment has "updatedAt" property'] = comment.hasOwnProperty('updatedAt');
    //         tests['"updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.updatedAt);
    //         tests['Comment has "author" property'] = comment.hasOwnProperty('author');
    //     }
    // }
    //
%}

###
# group: Articles, Favorite, Comments
# @name Delete Comment for Article
DELETE {{API_URL}}/articles/{{slug}}/comments/{{commentId}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

###
# group: Articles, Favorite, Comments
# @name Delete Article
DELETE {{API_URL}}/articles/{{slug}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

###
# group: Profiles
# @name Register Celeb
POST {{API_URL}}/users
Content-Type: application/json
X-Requested-With: XMLHttpRequest

{"user":{"email":"celeb_{{EMAIL}}", "password":"{{PASSWORD}}", "username":"celeb_{{USERNAME}}"}}

###
# group: Profiles
# @name Profile
GET {{API_URL}}/profiles/celeb_{{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

###
# group: Profiles
# @name Follow Profile
POST {{API_URL}}/profiles/celeb_{{USERNAME}}/follow
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

###
# group: Profiles
# @name Unfollow Profile
DELETE {{API_URL}}/profiles/celeb_{{USERNAME}}/follow
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

###
# group: Tags
# @name All Tags
GET {{API_URL}}/tags
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
    // TODO: migrate to HTTP Client Response handler API
    // var is200Response = responseCode.code === 200;
    //
    // tests['Response code is 200 OK'] = is200Response;
    //
    // if(is200Response){
    //     var responseJSON = JSON.parse(responseBody);
    //     
    //     tests['Response contains "tags" property'] = responseJSON.hasOwnProperty('tags');
    //     tests['"tags" property returned as array'] = Array.isArray(responseJSON.tags);
    // }
    //
%}